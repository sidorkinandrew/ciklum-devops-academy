- hosts: web
  become: yes
  vars:
    nginx_ssl_dir: "{{ lookup('env','SSL_DIR') | default('/etc/nginx/ssl',true) }}"

  tasks:
  - name: "apt-get update"
    apt:
      update_cache: yes
      cache_valid_time: 3600

  - name: installing additional dependencies
    package: name={{item}} state=present
    with_items:
      - openssl
      - unzip
      - curl
      - wget

  - name: "update cache && install nginx"
    apt:
      name: ['nginx']
      state: latest
      update_cache: yes

  - name: "enable nginx service"
    shell: systemctl enable nginx && systemctl daemon-reload && systemctl restart nginx

  - name: "create www directory"
    file:
      path: /var/www/{{ domain }}
      state: directory
      mode: '0775'
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"

  - name: delete default nginx site
    file:
      path: /etc/nginx/sites-enabled/default
      state: absent
    notify: restart nginx

  - name: copy nginx site.conf
    template:
      src: site.conf.j2
      dest: /etc/nginx/sites-enabled/{{ domain }}
      owner: root
      group: root
      mode: '0644'
    notify: restart nginx

  - name: download demo HTML5 template
    shell: cd /var/www/{{ domain }} && wget https://html5up.net/story/download --no-check-certificate -O story.zip && unzip -o story.zip -d ./ && rm story.zip -f && mv index-demo.html index.html

  - name: stat nginx certificate
    stat: path={{ nginx_ssl_dir }}/{{ domain }}.crt
    register: sitecert_stat

  - name: creating nginx ssl directory
    file: path={{ nginx_ssl_dir }} state=directory owner="{{ ansible_user }}" group="{{ ansible_user }}" mode=0775 recurse=yes

  - name: generate self signed certificate
    command: openssl req -new -nodes -x509 -subj "/C=US/ST=US/L=US/O=\'{{ domain }}\'/OU=Self Signed/CN=\'{{ domain }}\'" -days 3650 -keyout {{ nginx_ssl_dir }}/{{ domain }}.key -out {{ nginx_ssl_dir }}/{{ domain }}.crt -extensions v3_ca creates={{ nginx_ssl_dir }}/{{ domain }}.crt
    when: sitecert_stat.stat.exists == False
    notify: restart nginx

  handlers:
    - name: restart nginx
      service: name=nginx state=restarted